{"version":3,"sources":["serviceWorker.js","index.js","components/App.js","components/Navbar.js","photo.png","components/Main.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","body","style","backgroundImage","ipfs","require","ipfsClient","host","port","protocol","props","_this","Object","C_Coding_Revoir_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","this","C_Coding_Revoir_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","C_Coding_Revoir_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","captureFile","event","preventDefault","file","target","files","reader","FileReader","readAsArrayBuffer","onloadend","setState","buffer","Buffer","result","console","log","state","uploadImage","description","add","error","loading","revoir","methods","hash","send","from","account","on","images","bind","C_Coding_Revoir_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8__","tipImageOwner","loadWeb3","loadBlockchainData","ethereum","web3","Web3","enable","currentProvider","alert","eth","getAccounts","accounts","net","getId","networkId","networkData","Revoir","networks","Contract","abi","address","imageCount","imagesCount","i","image","concat","C_Coding_Revoir_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","sort","b","tipAmount","id","_this2","value","react__WEBPACK_IMPORTED_MODULE_10___default","_Navbar__WEBPACK_IMPORTED_MODULE_12__","className","_Main__WEBPACK_IMPORTED_MODULE_13__","Component","Navbar","react__WEBPACK_IMPORTED_MODULE_5___default","href","rel","src","photo","width","height","alt","Identicon","toString","module","exports","__webpack_require__","p","Main","role","maxWidth","react_bootstrap_Alert__WEBPACK_IMPORTED_MODULE_8___default","variant","Heading","size","color","onSubmit","imageDescription","type","accept","onChange","ref","input","placeholder","required","react_bootstrap_Button__WEBPACK_IMPORTED_MODULE_7___default","map","key","author","class","utils","fromWei","name","onClick","toWei"],"mappings":"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","file":"static/js/main.24863180.chunk.js","sourcesContent":["const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","import Revoir from '../abis/Revoir.json'\r\nimport React, { Component } from 'react';\r\nimport Identicon from 'identicon.js';\r\nimport Navbar from './Navbar'\r\nimport Main from './Main'\r\nimport Web3 from 'web3';\r\nimport './App.css';\r\n\r\ndocument.body.style.backgroundImage = \"url('bimage.png')\";\r\n//Declare IPFS\r\nconst ipfsClient = require('ipfs-http-client')\r\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' }) // leaving out the arguments will default to these values\r\n\r\nclass App extends Component {\r\n\r\n  async componentWillMount() {\r\n    await this.loadWeb3()\r\n    await this.loadBlockchainData()\r\n  }\r\n\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    }\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else {\r\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n    }\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const web3 = window.web3\r\n    // Load account\r\n    const accounts = await web3.eth.getAccounts()\r\n    this.setState({ account: accounts[0] })\r\n    // Network ID\r\n    const networkId = await web3.eth.net.getId()\r\n    const networkData = Revoir.networks[networkId]\r\n    if(networkData) {\r\n      const revoir = new web3.eth.Contract(Revoir.abi, networkData.address)\r\n      this.setState({ revoir })\r\n      const imagesCount = await revoir.methods.imageCount().call()\r\n      this.setState({ imagesCount })\r\n      // Load images\r\n      for (var i = 1; i <= imagesCount; i++) {\r\n        const image = await revoir.methods.images(i).call()\r\n        this.setState({\r\n          images: [...this.state.images, image]\r\n        })\r\n      }\r\n      // Sort images. Show highest tipped images first\r\n      this.setState({\r\n        images: this.state.images.sort((a,b) => b.tipAmount - a.tipAmount )\r\n      })\r\n      this.setState({ loading: false})\r\n    } else {\r\n      window.alert('Revoir contract not deployed to detected network.')\r\n    }\r\n  }\r\n\r\n  captureFile = event => {\r\n\r\n    event.preventDefault()\r\n    const file = event.target.files[0]\r\n    const reader = new window.FileReader()\r\n    reader.readAsArrayBuffer(file)\r\n\r\n    reader.onloadend = () => {\r\n      this.setState({ buffer: Buffer(reader.result) })\r\n      console.log('buffer', this.state.buffer)\r\n    }\r\n  }\r\n\r\n  uploadImage = description => {\r\n    console.log(\"Submitting file to ipfs...\")\r\n\r\n    //adding file to the IPFS\r\n    ipfs.add(this.state.buffer, (error, result) => {\r\n      console.log('Ipfs result', result)\r\n      if(error) {\r\n        console.error(error)\r\n        return\r\n      }\r\n\r\n      this.setState({ loading: true })\r\n      this.state.revoir.methods.uploadImage(result[0].hash, description).send({ from: this.state.account }).on('transactionHash', (hash) => {\r\n        this.setState({ loading: false })\r\n      })\r\n    })\r\n  }\r\n\r\n  tipImageOwner(id, tipAmount) {\r\n    this.setState({ loading: true })\r\n    this.state.revoir.methods.tipImageOwner(id).send({ from: this.state.account, value: tipAmount }).on('transactionHash', (hash) => {\r\n      this.setState({ loading: false })\r\n    })\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      account: '',\r\n      revoir: null,\r\n      images: [],\r\n      loading: true\r\n    }\r\n\r\n    this.uploadImage = this.uploadImage.bind(this)\r\n    this.tipImageOwner = this.tipImageOwner.bind(this)\r\n    this.captureFile = this.captureFile.bind(this)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar account={this.state.account} />\r\n        { this.state.loading\r\n          ? <div id=\"loader\" className=\"text-center mt-5\"><p>Loading...</p></div>\r\n          : <Main\r\n              images={this.state.images}\r\n              captureFile={this.captureFile}\r\n              uploadImage={this.uploadImage}\r\n              tipImageOwner={this.tipImageOwner}\r\n            />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport Identicon from 'identicon.js';\r\nimport photo from '../photo.png'\r\n\r\nclass Navbar extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n        <a\r\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\r\n          href=\"\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <img src={photo} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"\" />\r\n          Revoir\r\n        </a>\r\n        <ul className=\"navbar-nav px-3\">\r\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\r\n            <small className=\"text-secondary\">\r\n              <small id=\"account\">{this.props.account}</small>\r\n            </small>\r\n            { this.props.account\r\n              ? <img\r\n                className='ml-2'\r\n                width='30'\r\n                height='30'\r\n                src={`data:image/png;base64,${new Identicon(this.props.account, 30).toString()}`}\r\n              />\r\n              : <span></span>\r\n            }\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;","module.exports = __webpack_public_path__ + \"static/media/photo.d6cbd8e6.png\";","import React, { Component } from 'react';\r\nimport Identicon from 'identicon.js';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Alert from 'react-bootstrap/Alert';\r\nclass Main extends Component {\r\n\r\n  render() {\r\n    return (\r\n      \r\n      <div className=\"container-fluid mt-5\">\r\n        <div className=\"row\">\r\n          <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{ maxWidth: '500px' }}>\r\n            <div className=\"content mr-auto ml-auto\">\r\n              <p>&nbsp;</p>  \r\n              <Alert variant=\"success\">\r\n              <Alert.Heading style={{size: \"2px\"}}>Please use either Rinkeby or Matic Mumbai Testnet</Alert.Heading>\r\n              </Alert>\r\n              <h2 id=\"target\" style={{color: \"white\"}}>Share an Image to the Decentralized World!</h2>    \r\n              <form onSubmit={(event) => {\r\n                event.preventDefault()\r\n                const description = this.imageDescription.value\r\n                this.props.uploadImage(description)\r\n              }} >\r\n                <input type='file' accept=\".jpg, .jpeg, .png, .bmp, .gif\" onChange={this.props.captureFile} />\r\n                  <div className=\"form-group mr-sm-2\">\r\n                    <br></br>\r\n                      <input\r\n                        id=\"imageDescription\"\r\n                        type=\"text\"\r\n                        ref={(input) => { this.imageDescription = input }}\r\n                        className=\"form-control\"\r\n                        placeholder=\"Image description...\"\r\n                        required />\r\n                  </div>\r\n                  <Button variant=\"primary\" type=\"submit\">Upload!</Button>\r\n                \r\n              </form>\r\n              <p>&nbsp;</p>\r\n              { this.props.images.map((image, key) => {\r\n                return(\r\n                  <div className=\"card mb-4\" key={key} >\r\n                    <div className=\"card-header\">\r\n                      <img\r\n                        className='mr-2'\r\n                        width='30'\r\n                        height='30'\r\n                        src={`data:image/png;base64,${new Identicon(image.author, 30).toString()}`}\r\n                      />\r\n                      <small className=\"text-muted\">{image.author}</small>\r\n                    </div>\r\n                    <ul id=\"imageList\" className=\"list-group list-group-flush\">\r\n                      <li className=\"list-group-item\">\r\n                        <p class=\"text-center\"><img src={`https://ipfs.infura.io/ipfs/${image.hash}`} style={{ maxWidth: '420px'}}/></p>\r\n                        <p>{image.description}</p>\r\n                      </li>\r\n                      <li key={key} className=\"list-group-item py-2\">\r\n                      <Button variant=\"info\" size=\"sm\">\r\n                          TIPS: {window.web3.utils.fromWei(image.tipAmount.toString(), 'Ether')} ETH\r\n                          </Button>\r\n                        <Button variant=\"success\" size=\"sm\"\r\n                      \r\n                          name={image.id}\r\n                          onClick={(event) => {\r\n                            let tipAmount = window.web3.utils.toWei('0.1', 'Ether')\r\n                            console.log(event.target.name, tipAmount)\r\n                            this.props.tipImageOwner(event.target.name, tipAmount)\r\n                          }}\r\n                        >\r\n                          TIP 0.1 ETH\r\n                        </Button>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;"],"sourceRoot":""}